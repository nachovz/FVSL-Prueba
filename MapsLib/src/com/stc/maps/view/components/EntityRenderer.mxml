<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="40"
	horizontalScrollPolicy="off" verticalScrollPolicy="off" verticalAlign="middle" doubleClickEnabled="false">
<mx:Script>
    <![CDATA[
		import com.stc.maps.view.components.event.EntityRendererEvent;
		import com.stc.maps.view.components.event.EntityRendererListEvent;
		import com.stc.maps.vo.EntityVO;
		import com.stc.maps.vo.NetworkVO;
    
    	private var _data : Object = {};
    
    	override public function set data(value:Object):void
    	{
    		if(value)
    		{
	    		_data = value;
	    		check.label = value.title;
	    		check.selected = value.isSelected;
	    		image.source = getImageSource(value.type);
    		}
    	}
    	override public function get data():Object
    	{
    		return _data;
    	}
    
        private function onChange(evt:Event):void {
            data.isSelected = !data.isSelected;
            if(data.isSelected) addLayers();
            else removeLayers();
        }
        
        private function addLayers() : void
        {
	     	var ev : EntityRendererEvent = (_data is NetworkVO) ? new EntityRendererEvent(EntityRendererEvent.SHOW_ITEM) : new EntityRendererEvent(EntityRendererEvent.SHOW_ITEM);
			ev.item = _data;
	     	this.dispatchEvent(ev);
	     	this.dispatchEvent(new Event("finishHideOrShow",true));
        }

        private function removeLayers() : void
        {
	     	var ev : EntityRendererEvent = (_data is NetworkVO) ? new EntityRendererEvent(EntityRendererEvent.HIDE_ITEM) : new EntityRendererEvent(EntityRendererEvent.HIDE_ITEM);
			ev.item = _data;
	     	this.dispatchEvent(ev);
	     	this.dispatchEvent(new Event("finishHideOrShow",true));
        }
        
        private function getImageSource(type : String) : String
        {
        	switch(type)
        	{
        		case EntityVO.ODS:
        			return "com/assets/markers/3/ods.png";
        		break;
        		case EntityVO.COOPERANT:
        			return "com/assets/markers/3/cooperantes.png";
        		break;
        		case EntityVO.NETWORK:
        			return "com/assets/markers/3/redes.png";
        		break;
        		case EntityVO.COMPANY:
        			return "com/assets/markers/3/empresas.png";
        		break;
        		default:
        			return "com/assets/markers/3/otros.png";
        		break;
        	}
        	
        	return "";
        }
		protected function searchZoomHandler(event:MouseEvent):void{
			var ev : EntityRendererListEvent = (_data is NetworkVO) 
				? 
				new EntityRendererListEvent(EntityRendererListEvent.ZOOM_SEARCH) 
				: 
				new EntityRendererListEvent(EntityRendererListEvent.ZOOM_SEARCH);
			ev.item = _data;
			
			dispatchEvent(ev);	
		}
    ]]>
</mx:Script>
	<mx:CheckBox id="check" doubleClickEnabled="false" color="#000000" change="onChange(event);" width="230" fontSize="12" />
	<mx:Image id="image" />
	<mx:Image id="searchImage" source="com/assets/img/lupa.gif"
			  buttonMode="true"
			  mouseChildren="false"
			  useHandCursor="true"
			  click="searchZoomHandler(event)"
			  />
</mx:HBox>
