<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="598" height="190"
	title="{_title}" close="closeWindow(event)" showCloseButton="true"
	horizontalScrollPolicy="off" verticalScrollPolicy="off">
	<mx:Script>
		<![CDATA[
			import com.stc.maps.view.components.event.EntityRendererEvent;
			import com.stc.maps.vo.EntityVO;
			import com.stc.maps.vo.NetworkVO;
			
			import flash.display.Loader;
			import flash.net.navigateToURL;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.Responder;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var _data : Object;
			private var collapsed : Boolean = true;
			
			[Bindable]
			private var facebookLink : String = "No tiene cuenta Facebook";
			[Bindable]
			private var _title : String = "Cargando...";
			[Bindable]
			private var twitterLink : String = "No tiene cuenta Twitter";
			[Bindable]
			private var logoURL : String = "assets/logos/polar.jpg";
			[Bindable]
			private var objective : String = "Cargando...";
			[Bindable]
			private var direction : String = "Cargando...";
			[Bindable]
			private var webURL : String = "Cargando...";
			[Bindable]
			private var phone : String = "Cargando...";
			[Bindable]
			private var email : String = "Cargando...";
			
			[Bindable]
			private var areas : ArrayCollection = new ArrayCollection();
			[Bindable]
			private var beneficiarios : ArrayCollection = new ArrayCollection();
			[Bindable]
			private var awards : ArrayCollection = new ArrayCollection();
			[Bindable]
			private var focus : String = "Cargando...";
			[Bindable]
			private var orgType : String = "Cargando...";
			[Bindable]
			private var financy : String = "Cargando...";
			
			[Bindable]
			private var esRed : Boolean;
			
			[Bindable]
			private var nodes : ArrayCollection;
			
			[Bindable]
			private var selectedIndex : int = 0;
			
			public var getEntityDetailsHandlers : mx.rpc.Responder = new mx.rpc.Responder(getEntityDetailsResult, getEntityDetailsFault);
			public var getNetworkDetailsHandlers : mx.rpc.Responder = new mx.rpc.Responder(getNetworkDetailsResult, getEntityDetailsFault);
			
			private function closeWindow(event : Event) : void
			{
				PopUpManager.removePopUp(this);
			}
			
			override public function set data(value : Object) : void
			{
				if(value && value is EntityVO)
				{
					var entity : Object = value;
					_data = value;
					esRed = (entity.type==EntityVO.NETWORK);
				}
			}

			override public function get data() : Object
			{
				return _data;
			}
			
			private function verRed_clickHander(event : MouseEvent) : void
			{
				if(esRed)
				{
					var ev : EntityRendererEvent = new EntityRendererEvent(EntityRendererEvent.EXPAND_NETWORK);
					ev.network = _data;
					ev.network.nodes = nodes;
					dispatchEvent(ev);
				}
				else
				{
					Alert.show("Este icono no es de una red o esta vacio");
				}
			}
			
			private function verficha_clickHander(event : MouseEvent) : void
			{
				if(collapsed)
				{
					resizeEffect.play();
					collapsed = false;		
					collapseButton.label = "Ocultar ficha";			
				}
				else
				{
					resizeEffect2.play();
					collapsed = true;					
					collapseButton.label = "Ver ficha";			
				}
			}
			
			private function getNetworkDetailsResult(event : ResultEvent) : void
			{
				var network : NetworkVO = event.result as NetworkVO;
				setEntity(network as EntityVO);
				
				nodes = network.nodes;
			}
			
			private function getEntityDetailsResult(event : ResultEvent) : void
			{
				var entity : EntityVO = event.result as EntityVO;
				setEntity(entity);
			}
			
			private function setEntity(entity : EntityVO) : void
			{
				logoURL = entity.logoURL;
				objective = entity.objective;
				direction = entity.direction;
				webURL = entity.webURL;
				phone = entity.phone;
				email = entity.email;
				if(entity.facebookLink!="") facebookLink = entity.facebookLink;
				_title = entity.title;
				if(entity.twitterLink!="") twitterLink = entity.twitterLink;
				
				if(entity.awards) awards.source = entity.awards.source;
				awards.refresh();

				if(entity.interventionAreas) areas.source = entity.interventionAreas.source;
				areas.refresh();

				if(entity.beneficiaries) beneficiarios.source = entity.beneficiaries.source;
				beneficiarios.refresh();
				
				focus = entity.geograficalFocus;
				orgType = entity.organizationType;
				financy = entity.financy;
				if(financy=="No") 
				{
					poblacionCooperate.visible = false;
					poblacionCooperate.includeInLayout = false;
				}
				
				if(entity.imageData)
				{
					try{ 
						var loader:Loader = new Loader();
						loader.contentLoaderInfo.addEventListener(Event.COMPLETE,loaderCompleteHandler);
						loader.addEventListener(IOErrorEvent.IO_ERROR, onIOError, false, 0, true);
						loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, onIOError, false, 0, true);
							
						loader.loadBytes(entity.imageData);
					}catch(e:Error){
						imgCanvas.source = "com/assets/img/noimage.jpg";
					}
				}
				
				if(entity.type==EntityVO.ODS) selectedIndex = 1;
				
			}
			
			private function onIOError(event:IOErrorEvent):void{
				imgCanvas.source = "com/assets/img/noimage.png";
			}
			private function loaderCompleteHandler(event:Event) : void
			{
				var loader:Loader = LoaderInfo(event.target).loader;
				loader.removeEventListener(Event.COMPLETE,loaderCompleteHandler);
				
				
				var bmp:Bitmap = Bitmap(loader.content);
				imgCanvas.source = bmp;
			}
			
			private function getAwardStatus(item:Object, column:DataGridColumn):String
			{
				if(item.recibido==1) return "Recibido";
				else return "Otorgado";
			}
			
			private function twitter_click(event : MouseEvent) : void
			{
				if(twitterLink!="No tiene cuenta Twitter") navigateToURL(new URLRequest(twitterLink),'_parent');
			}
			
			private function facebook_click(event : MouseEvent) : void
			{
				if(facebookLink!="No tiene cuenta Facebook") navigateToURL(new URLRequest(facebookLink),'_parent');
			}
			
		   	private function getEntityDetailsFault(event : FaultEvent) : void
		   	{
		   		Alert.show("A ocurrido un error trayendo los datos de la entidad.");
		   	}	
		   	
		   	public function myLabelFunc(item:Object) : String 
		   	{
		   		if(item is String)
            		return item as String; 

        		return item.area; 
      		}
			
			
			protected function printEventHandler(event:MouseEvent):void{
				if( _data && _data is EntityVO){
					
					var myEntity:EntityVO = _data as EntityVO
					var myType:String = myEntity.type;
					var myId:String = myEntity.id.toString();
					var myOrg:String = myEntity.org;
					
					
					var URLDir:String = "";
					var URLDir2:String = "";
					if(myOrg == "ur"){
						URLDir = "MAPA_UR";
						URLDir2 = "pdfeu";
					}else{
						URLDir = "MAPA_FVSL";
						URLDir2 = "pdfe";
					}
					
					navigateToURL(
						
							new URLRequest
							(
								(
									"http://10.20.20.171:9092/asp-workspace/"+URLDir+"/PDFExport/"+URLDir2+"/Default.aspx?type="+myType+"&id="+myId
								).toString()
							), '_blank'
						
					)
					
					
				}
			}
		]]>
	</mx:Script>
	<mx:Resize id="resizeEffect" target="{this}" heightFrom="190" heightTo="470" duration="500" />
	<mx:Resize id="resizeEffect2" target="{this}" heightFrom="470" heightTo="190" duration="500" />
	
	<mx:Image x="10" y="10" id="imgCanvas" width="100" height="100"/>
	<mx:Image x="10" y="118" source="com/assets/img/twitter.png" useHandCursor="true" buttonMode="true" width="32" click="twitter_click(event)" toolTip="{twitterLink}" height="32"/>
	<mx:Image x="50" y="118" source="com/assets/img/facebook.png" useHandCursor="true" buttonMode="true" width="32" click="facebook_click(event)" toolTip="{facebookLink}" height="32"/>
	<mx:TextArea x="118" borderThickness="0" y="10" width="470" height="52" editable="false">
		<mx:text>{objective}</mx:text>
	</mx:TextArea>
	<mx:Label x="118" y="65" text="Dirección:" fontWeight="bold"/>
	<mx:Label x="194" y="65" text="{direction}" width="402"/>
	<mx:Label x="194" y="87" text="{webURL}" width="394"/>
	<mx:Label x="194" y="109" text="{email}" width="394"/>
	<mx:Label x="118" y="87" text="Página web:" width="86" fontWeight="bold"/>
	<mx:Label x="118" y="109" text="Correo:" width="50" fontWeight="bold"/>
	<mx:Label x="194" y="132" text="{phone}" width="254"/>
	<mx:Label x="118" y="131" text="Teléfono:" width="86" fontWeight="bold"/>
	<mx:Button id="verRed" x="364" y="132" visible="{esRed}" click="verRed_clickHander(event)" label="Ver Red" width="70"/>
	<mx:Button x="440" y="132" id="collapseButton" label="Ver ficha" width="70" click="verficha_clickHander(event)"/>
	<mx:Button x="516" y="132" id="printButton" label="Imprimir" width="70" click="printEventHandler(event)"/>
	<mx:ViewStack selectedIndex="{selectedIndex}" x="10" y="162">
		<mx:VBox verticalAlign="top">
			<mx:HBox horizontalAlign="left">
				<mx:TextArea width="150" text="Premios otorgados y recibidos:" height="80" wordWrap="true" editable="false" borderThickness="0"/>
				<mx:DataGrid width="420" height="100" dataProvider="{awards}">
		            <mx:columns>
		                <mx:DataGridColumn dataField="awardName" headerText="Premio"/>
		                <mx:DataGridColumn dataField="awardType" headerText="" labelFunction="getAwardStatus" width="120"/>
		            </mx:columns>
				</mx:DataGrid>
			</mx:HBox>
			<mx:HBox horizontalAlign="left">
				<mx:Label width="150" text="Areas de intervención:"/>
				<mx:List width="420" height="50" dataProvider="{areas}" labelFunction="myLabelFunc" />
			</mx:HBox>
			<mx:HBox horizontalAlign="left">
				<mx:Label width="150" text="Tipo de organización:"/>
				<mx:Label width="420" text="{orgType}"/>
			</mx:HBox>
			<mx:HBox horizontalAlign="left">
				<mx:Label width="150" text="Financia a terceros:"/>
				<mx:Label width="420" text="No"/>
			</mx:HBox>
			<mx:HBox id="poblacionCooperate" horizontalAlign="left">
				<mx:Label width="150" text="Poblacion de interés:"/>
				<mx:List width="420" height="50" dataProvider="{beneficiarios}" />
			</mx:HBox>		
			<mx:HBox horizontalAlign="left">
				<mx:Label width="150" text="Enfoque geografico:"/>
				<mx:Label width="420" text="{focus}"/>
			</mx:HBox>
		</mx:VBox>
		<mx:VBox verticalAlign="top" x="10" y="162">
			<mx:HBox horizontalAlign="left">
				<mx:TextArea width="150" text="Premios otorgados y recibidos:" height="80" wordWrap="true" editable="false" borderThickness="0"/>
				<mx:DataGrid width="420" height="100" dataProvider="{awards}">
		            <mx:columns>
		                <mx:DataGridColumn dataField="awardName" headerText="Premio"/>
		                <mx:DataGridColumn dataField="awardType" headerText="" labelFunction="getAwardStatus" width="120"/>
		            </mx:columns>		
				</mx:DataGrid>
			</mx:HBox>
			<mx:HBox horizontalAlign="left">
				<mx:Label width="150" text="Areas de intervención:"/>
				<mx:List width="420" height="50" dataProvider="{areas}" />
			</mx:HBox>
			<mx:HBox horizontalAlign="left">
				<mx:Label width="150" text="Poblacion de interés:"/>
				<mx:List width="420" height="50" dataProvider="{beneficiarios}" />
			</mx:HBox>
		</mx:VBox>
		
	</mx:ViewStack>
</mx:TitleWindow>